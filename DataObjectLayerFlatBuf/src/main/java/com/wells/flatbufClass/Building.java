// automatically generated by the FlatBuffers compiler, do not modify

package com.wells.flatbufClass;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Building extends Table {
  public static Building getRootAsBuilding(ByteBuffer _bb) { return getRootAsBuilding(_bb, new Building()); }
  public static Building getRootAsBuilding(ByteBuffer _bb, Building obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Building __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String apartment() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer apartmentAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer apartmentInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String floor() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer floorAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer floorInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String wing() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer wingAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer wingInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createBuilding(FlatBufferBuilder builder,
      int apartmentOffset,
      int floorOffset,
      int wingOffset) {
    builder.startObject(3);
    Building.addWing(builder, wingOffset);
    Building.addFloor(builder, floorOffset);
    Building.addApartment(builder, apartmentOffset);
    return Building.endBuilding(builder);
  }

  public static void startBuilding(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addApartment(FlatBufferBuilder builder, int apartmentOffset) { builder.addOffset(0, apartmentOffset, 0); }
  public static void addFloor(FlatBufferBuilder builder, int floorOffset) { builder.addOffset(1, floorOffset, 0); }
  public static void addWing(FlatBufferBuilder builder, int wingOffset) { builder.addOffset(2, wingOffset, 0); }
  public static int endBuilding(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

